on:  [push, pull_request]
name: e2e
jobs:
  e2e:
    name: e2e
    strategy:
      fail-fast: false
      matrix:
        pingaccess-version: [5.3.2, 6.0.4, 6.1.3, 6.2.0]
        terraform-version: [ 0.13.6, 0.14.5 ]
    services:
      pingaccess:
        image: pingidentity/pingaccess:${{ matrix.pingaccess-version }}-edge
        env:
          PING_IDENTITY_ACCEPT_EULA: YES
          IMAGE_VERSION: pingaccess-alpine-az11-${{ matrix.pingaccess-version }}-210308-b5f4
          PING_IDENTITY_DEVOPS_USER: ${{ secrets.PING_IDENTITY_DEVOPS_USER }}
          PING_IDENTITY_DEVOPS_KEY: ${{ secrets.PING_IDENTITY_DEVOPS_KEY }}
        ports:
          - 9000:9000
      pingfederate:
        image: pingidentity/pingfederate:10.0.6-edge
        env:
          PING_IDENTITY_ACCEPT_EULA: YES
          PING_IDENTITY_DEVOPS_USER: ${{ secrets.PING_IDENTITY_DEVOPS_USER }}
          PING_IDENTITY_DEVOPS_KEY: ${{ secrets.PING_IDENTITY_DEVOPS_KEY }}
          SERVER_PROFILE_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
          SERVER_PROFILE_PATH: getting-started/pingfederate
          IMAGE_VERSION: pingfederate-alpine-az11-10.0.6-210308-d9b5
        ports:
          - 9999:9999
          - 9031:9031

    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Setup Test Environment
        run: |
          curl -k -i -H "Content-Type: application/json" -H "X-Xsrf-Header: PingFederate" --user Administrator:2FederateM0re -d "@func-tests/pf-settings.json" -X PUT https://localhost:9999/pf-admin-api/v1/serverSettings
          curl -k https://localhost:9031/.well-known/openid-configuration

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ matrix.terraform-version }}

      - name: Install Build and Deploy
        run: make build deploy-local

      - name: Terraform Init
        run: make func-init

      - name: Terraform Plan
        run: make func-plan
        env:
          TF_VAR_pa_version: ${{ matrix.pingaccess-version }}

      - name: Terraform Apply
        run: make func-apply
        env:
          TF_VAR_pa_version: ${{ matrix.pingaccess-version }}

      - name: Terraform Plan
        env:
          TF_VAR_pa_version: ${{ matrix.pingaccess-version }}
        run: terraform plan -detailed-exitcode
        working-directory: func-tests

      - name: Container logs
        if: ${{ failure() }}
        run: docker logs `docker ps --filter expose=9000 -q` && cat func-tests/terraform.log

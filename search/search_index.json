{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The PingAccess provider is used to interact with the many resources supported by the PingAccess admin API. The provider needs to be configured with the proper credentials before it can be used. Use the navigation to the left to read about the available resources. Example Usage # Configure the PingAccess Provider provider pingaccess { username = Administrator password = 2Access base_url = https://localhost:9000 context = /pa-admin-api/v3 } # Create a site resource pingaccess_site site { # ... } Authentication The PingAccess provider offers a flexible means of providing credentials for authentication. The following methods are supported, in this order, and explained below: Static credentials Environment variables Static credentials Static credentials can be provided by adding an username and password in-line in the PingAccess provider block: Usage: provider pingaccess { username = Administrator password = 2Access base_url = https://localhost:9000 context = /pa-admin-api/v3 } Environment variables You can provide your credentials via the PINGACCESS_USERNAME , PINGACCESS_PASSWORD , PINGACCESS_CONTEXT and PINGACCESS_BASEURL environment variables. provider pingaccess {} Usage: $ export PINGACCESS_USERNAME= Administrator $ export PINGACCESS_PASSWORD= top_secret $ export PINGACCESS_CONTEXT= /pa-admin-api/v3 $ export PINGACCESS_BASEURL= https://myadmin.server:9000 $ terraform plan","title":"PingAccess Provider"},{"location":"#example-usage","text":"# Configure the PingAccess Provider provider pingaccess { username = Administrator password = 2Access base_url = https://localhost:9000 context = /pa-admin-api/v3 } # Create a site resource pingaccess_site site { # ... }","title":"Example Usage"},{"location":"#authentication","text":"The PingAccess provider offers a flexible means of providing credentials for authentication. The following methods are supported, in this order, and explained below: Static credentials Environment variables","title":"Authentication"},{"location":"#static-credentials","text":"Static credentials can be provided by adding an username and password in-line in the PingAccess provider block: Usage: provider pingaccess { username = Administrator password = 2Access base_url = https://localhost:9000 context = /pa-admin-api/v3 }","title":"Static credentials"},{"location":"#environment-variables","text":"You can provide your credentials via the PINGACCESS_USERNAME , PINGACCESS_PASSWORD , PINGACCESS_CONTEXT and PINGACCESS_BASEURL environment variables. provider pingaccess {} Usage: $ export PINGACCESS_USERNAME= Administrator $ export PINGACCESS_PASSWORD= top_secret $ export PINGACCESS_CONTEXT= /pa-admin-api/v3 $ export PINGACCESS_BASEURL= https://myadmin.server:9000 $ terraform plan","title":"Environment variables"},{"location":"data_sources/pingaccess_certificate/","text":"Use this data source to get the ID of a certificate in Ping Access, you can reference it by alias without having to hard code the IDs as input. Example Usage data pingaccess_certificate demo_certificate { alias = amazon_root_ca1 } Argument Attributes The following arguments are supported: alias - (required) The alias for the certificate. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The certificates's ID. expires - The date at which the certificate expires as the number of milliseconds since January 1, 1970, 00:00:00 GMT. issuer_dn - The issuer DN for the certificate. md5sum - The MD5 sum for the certificate. serial_number - The serial number for the certificate. sha1sum - The SHA1 sum for the certificate. signature_algorithm - The algorithm used to sign the certificate. subject_cn - The subject CN for the certificate. subject_dn - The subject DN for the certificate. valid_from - The date at which the certificate is valid from as the number of milliseconds since January 1, 1970, 00:00:00 GMT.","title":"pingaccess_certificate"},{"location":"data_sources/pingaccess_certificate/#example-usage","text":"data pingaccess_certificate demo_certificate { alias = amazon_root_ca1 }","title":"Example Usage"},{"location":"data_sources/pingaccess_certificate/#argument-attributes","text":"The following arguments are supported: alias - (required) The alias for the certificate.","title":"Argument Attributes"},{"location":"data_sources/pingaccess_certificate/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The certificates's ID. expires - The date at which the certificate expires as the number of milliseconds since January 1, 1970, 00:00:00 GMT. issuer_dn - The issuer DN for the certificate. md5sum - The MD5 sum for the certificate. serial_number - The serial number for the certificate. sha1sum - The SHA1 sum for the certificate. signature_algorithm - The algorithm used to sign the certificate. subject_cn - The subject CN for the certificate. subject_dn - The subject DN for the certificate. valid_from - The date at which the certificate is valid from as the number of milliseconds since January 1, 1970, 00:00:00 GMT.","title":"Attributes Reference"},{"location":"data_sources/pingaccess_trusted_certificate_group/","text":"Use this data source to get the ID of a trusted certificate group in Ping Access, you can reference it by name without having to hard code the IDs as input. Example Usage data pingaccess_trusted_certificate_group trust_any { name = Trust Any } Argument Attributes The following arguments are supported: name - (required) The name for the trusted certificate group. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The certificates's ID. cert_ids - The IDs of the certificates that are in the trusted certificate group. ignore_all_certificate_errors - This field is read-only and is only set to true for the Trust Any certificate group. skip_certificate_date_check - This field is true if certificates that have expired or are not yet valid but have passed the other certificate checks should be trusted. system_group - This field is read-only and indicates the trusted certificate group cannot be modified. use_java_trust_store - This field is true if the certificates in the group should also include all certificates in the Java Trust Store.","title":"pingaccess_trusted_certificate_group"},{"location":"data_sources/pingaccess_trusted_certificate_group/#example-usage","text":"data pingaccess_trusted_certificate_group trust_any { name = Trust Any }","title":"Example Usage"},{"location":"data_sources/pingaccess_trusted_certificate_group/#argument-attributes","text":"The following arguments are supported: name - (required) The name for the trusted certificate group.","title":"Argument Attributes"},{"location":"data_sources/pingaccess_trusted_certificate_group/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The certificates's ID. cert_ids - The IDs of the certificates that are in the trusted certificate group. ignore_all_certificate_errors - This field is read-only and is only set to true for the Trust Any certificate group. skip_certificate_date_check - This field is true if certificates that have expired or are not yet valid but have passed the other certificate checks should be trusted. system_group - This field is read-only and indicates the trusted certificate group cannot be modified. use_java_trust_store - This field is true if the certificates in the group should also include all certificates in the Java Trust Store.","title":"Attributes Reference"},{"location":"resources/pingaccess_access_token_validator/","text":"Provides a access token validator. Example Usage resource pingaccess_access_token_validator demo_access_token_validator { class_name = com.pingidentity.pa.accesstokenvalidators.JwksEndpoint name = demo configuration = EOF { description : null, path : /bar , subjectAttributeName : demo , issuer : null, audience : null } EOF } Argument Attributes The following arguments are supported: class_name - (Required) The access token validator's class name. configuration - (Required) The access token validator's configuration data. name - (Required) The access token validator's name. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The access token validator's ID. Import PingAccess access token validator can be imported using the id, e.g. $ terraform import pingaccess_access_token_validator.demo_access_token_validator 123","title":"pingaccess_access_token_validator"},{"location":"resources/pingaccess_access_token_validator/#example-usage","text":"resource pingaccess_access_token_validator demo_access_token_validator { class_name = com.pingidentity.pa.accesstokenvalidators.JwksEndpoint name = demo configuration = EOF { description : null, path : /bar , subjectAttributeName : demo , issuer : null, audience : null } EOF }","title":"Example Usage"},{"location":"resources/pingaccess_access_token_validator/#argument-attributes","text":"The following arguments are supported: class_name - (Required) The access token validator's class name. configuration - (Required) The access token validator's configuration data. name - (Required) The access token validator's name.","title":"Argument Attributes"},{"location":"resources/pingaccess_access_token_validator/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The access token validator's ID.","title":"Attributes Reference"},{"location":"resources/pingaccess_access_token_validator/#import","text":"PingAccess access token validator can be imported using the id, e.g. $ terraform import pingaccess_access_token_validator.demo_access_token_validator 123","title":"Import"},{"location":"resources/pingaccess_application/","text":"Provides a application. Example Usage resource pingaccess_application demo_application { application_type = Web name = demo context_root = / default_auth_type = Web destination = Site site_id = ${pingaccess_site.demo_site.id} virtual_host_ids = [ ${pingaccess_virtualhost.demo_virtualhost.id} ] policy { web { type = Rule id = ${pingaccess_rule.demo_rule.id} } } } Argument Attributes The following arguments are supported: access_validator_id - Non-zero if the application is protected by an Authorization Server. Only applies to applications of type API. agent_id - The ID of the agent associated with the application or zero if none. application_type - ['Web' or 'API' or 'Dynamic']: The type of application. case_sensitive_path - True if the path is case sensitive. context_root - The context root of the application. default_auth_type - 'Web' or 'API', For Web + API applications (dynamic) defaultAuthType selects the processing mode when a request: does not have a token (web session, OAuth bearer) or has both tokens. This setting applies to all resources in the application except where overridden with defaultAuthTypeOverride. description - A description of the application. destination - 'Site' or 'Agent', The application destination type. enabled - True if the application is enabled. identity_mapping_ids - A map of Identity Mappings associated with the application. The key is 'Web' or 'API' and the value is an Identity Mapping ID. name - The application name. policy - A map of policy items associated with the application. The key is 'Web' or 'API' and the value is a list of PolicyItems. realm - The OAuth realm associated with the application. require_https - True if the application requires HTTPS connections. site_id - The ID of the site associated with the application or zero if none. spa_support_enabled - Enable SPA support. virtual_host_ids - An array of virtual host IDs associated with the application. web_session_id - The ID of the web session associated with the application or zero if none. An identity_mapping_ids block supports the following arguments: web - The identity mapping ID. api - The identity mapping ID. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The application s's ID. Import PingAccess applications can be imported using the id, e.g. $ terraform import pingaccess_application .demo_application 123","title":"pingaccess_application"},{"location":"resources/pingaccess_application/#example-usage","text":"resource pingaccess_application demo_application { application_type = Web name = demo context_root = / default_auth_type = Web destination = Site site_id = ${pingaccess_site.demo_site.id} virtual_host_ids = [ ${pingaccess_virtualhost.demo_virtualhost.id} ] policy { web { type = Rule id = ${pingaccess_rule.demo_rule.id} } } }","title":"Example Usage"},{"location":"resources/pingaccess_application/#argument-attributes","text":"The following arguments are supported: access_validator_id - Non-zero if the application is protected by an Authorization Server. Only applies to applications of type API. agent_id - The ID of the agent associated with the application or zero if none. application_type - ['Web' or 'API' or 'Dynamic']: The type of application. case_sensitive_path - True if the path is case sensitive. context_root - The context root of the application. default_auth_type - 'Web' or 'API', For Web + API applications (dynamic) defaultAuthType selects the processing mode when a request: does not have a token (web session, OAuth bearer) or has both tokens. This setting applies to all resources in the application except where overridden with defaultAuthTypeOverride. description - A description of the application. destination - 'Site' or 'Agent', The application destination type. enabled - True if the application is enabled. identity_mapping_ids - A map of Identity Mappings associated with the application. The key is 'Web' or 'API' and the value is an Identity Mapping ID. name - The application name. policy - A map of policy items associated with the application. The key is 'Web' or 'API' and the value is a list of PolicyItems. realm - The OAuth realm associated with the application. require_https - True if the application requires HTTPS connections. site_id - The ID of the site associated with the application or zero if none. spa_support_enabled - Enable SPA support. virtual_host_ids - An array of virtual host IDs associated with the application. web_session_id - The ID of the web session associated with the application or zero if none. An identity_mapping_ids block supports the following arguments: web - The identity mapping ID. api - The identity mapping ID.","title":"Argument Attributes"},{"location":"resources/pingaccess_application/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The application s's ID.","title":"Attributes Reference"},{"location":"resources/pingaccess_application/#import","text":"PingAccess applications can be imported using the id, e.g. $ terraform import pingaccess_application .demo_application 123","title":"Import"},{"location":"resources/pingaccess_application_resource/","text":"Provides a application resource. Example Usage resource pingaccess_application_resource demo_application_resource { name = demo_resource methods = [ * , ] path_patterns { pattern = /as/token.oauth2 type = WILDCARD } path_patterns { pattern = %s type = WILDCARD } path_prefixes = [ /as/token.oauth2 , %s , ] audit_level = OFF anonymous = false enabled = true root_resource = false application_id = ${pingaccess_application.demo_application.id} policy { web { type = Rule id = ${pingaccess_rule.demo_rule_one.id} } web { type = Rule id = ${pingaccess_rule.demo_rule_two.id} } } } Argument Attributes The following arguments are supported: anonymous - True if the resource is anonymous. application_id - The id of the associated application. This field is read-only. audit_level - ['ON' or 'OFF']: Indicates if audit logging is enabled for the resource. default_auth_type_override - ['Web' or 'API']: For Web + API applications (dynamic) defaultAuthType selects the processing mode when a request: does not have a token (web session, OAuth bearer) or has both tokens. default_auth_type_override overrides the defaultAuthType at the application level for this resource. A value of null indicates the resource should not override the defaultAuthType. enabled - True if the resource is enabled. methods - An array of HTTP methods configured for the resource name - The name of the resource path_patterns - A list of one or more request path-matching patterns path_prefixes - An array of path prefixes for the resource (DEPRECATED - to be removed in a future release; please use 'pathPatterns' instead) policy - A map of policy items associated with the resource. The key is 'Web' or 'API' and the value is a list of PolicyItems. root_resource - True if the resource is the root resource for the application unprotected - True if the resource is unprotected. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The application s's ID. Import PingAccess applications can be imported using the id, e.g. $ terraform import pingaccess_application.demo_application 123","title":"pingaccess_application_resource"},{"location":"resources/pingaccess_application_resource/#example-usage","text":"resource pingaccess_application_resource demo_application_resource { name = demo_resource methods = [ * , ] path_patterns { pattern = /as/token.oauth2 type = WILDCARD } path_patterns { pattern = %s type = WILDCARD } path_prefixes = [ /as/token.oauth2 , %s , ] audit_level = OFF anonymous = false enabled = true root_resource = false application_id = ${pingaccess_application.demo_application.id} policy { web { type = Rule id = ${pingaccess_rule.demo_rule_one.id} } web { type = Rule id = ${pingaccess_rule.demo_rule_two.id} } } }","title":"Example Usage"},{"location":"resources/pingaccess_application_resource/#argument-attributes","text":"The following arguments are supported: anonymous - True if the resource is anonymous. application_id - The id of the associated application. This field is read-only. audit_level - ['ON' or 'OFF']: Indicates if audit logging is enabled for the resource. default_auth_type_override - ['Web' or 'API']: For Web + API applications (dynamic) defaultAuthType selects the processing mode when a request: does not have a token (web session, OAuth bearer) or has both tokens. default_auth_type_override overrides the defaultAuthType at the application level for this resource. A value of null indicates the resource should not override the defaultAuthType. enabled - True if the resource is enabled. methods - An array of HTTP methods configured for the resource name - The name of the resource path_patterns - A list of one or more request path-matching patterns path_prefixes - An array of path prefixes for the resource (DEPRECATED - to be removed in a future release; please use 'pathPatterns' instead) policy - A map of policy items associated with the resource. The key is 'Web' or 'API' and the value is a list of PolicyItems. root_resource - True if the resource is the root resource for the application unprotected - True if the resource is unprotected.","title":"Argument Attributes"},{"location":"resources/pingaccess_application_resource/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The application s's ID.","title":"Attributes Reference"},{"location":"resources/pingaccess_application_resource/#import","text":"PingAccess applications can be imported using the id, e.g. $ terraform import pingaccess_application.demo_application 123","title":"Import"},{"location":"resources/pingaccess_auth_token_management/","text":"Provides a auth token management. Example Usage resource pingaccess_auth_token_management demo { key_roll_enabled = true key_roll_period_in_hours = 24 issuer = PingAccessAuthToken signing_algorithm = P-256 } Argument Attributes The following arguments are supported: key_roll_enabled - The issuer value to include in auth tokens. PingAccess inserts this value as the iss claim within the auth tokens. key_roll_period_in_hours - This field is true if key rollover is enabled. When false, PingAccess will not rollover keys at the configured interval. issuer - The interval (in hours) at which PingAccess will roll the keys. Key rollover updates keys at regular intervals to ensure the security of signed auth tokens. signing_algorithm - The signing algorithm used when creating signed auth tokens. Attributes Reference No additional attributes are provided.","title":"pingaccess_auth_token_management"},{"location":"resources/pingaccess_auth_token_management/#example-usage","text":"resource pingaccess_auth_token_management demo { key_roll_enabled = true key_roll_period_in_hours = 24 issuer = PingAccessAuthToken signing_algorithm = P-256 }","title":"Example Usage"},{"location":"resources/pingaccess_auth_token_management/#argument-attributes","text":"The following arguments are supported: key_roll_enabled - The issuer value to include in auth tokens. PingAccess inserts this value as the iss claim within the auth tokens. key_roll_period_in_hours - This field is true if key rollover is enabled. When false, PingAccess will not rollover keys at the configured interval. issuer - The interval (in hours) at which PingAccess will roll the keys. Key rollover updates keys at regular intervals to ensure the security of signed auth tokens. signing_algorithm - The signing algorithm used when creating signed auth tokens.","title":"Argument Attributes"},{"location":"resources/pingaccess_auth_token_management/#attributes-reference","text":"No additional attributes are provided.","title":"Attributes Reference"},{"location":"resources/pingaccess_certificate/","text":"Provides a ceritficate. Example Usage resource pingaccess_certificate demo_certificate { alias = demo file_data = ${base64encode(file( test_cases/amazon_root_ca1.pem ))} } Argument Attributes The following arguments are supported: alias - (required) The alias for the certificate. file_data - (required) The base64-encoded data of the certificate. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The certificates's ID. expires - The date at which the certificate expires as the number of milliseconds since January 1, 1970, 00:00:00 GMT. issuer_dn - The issuer DN for the certificate. md5sum - The MD5 sum for the certificate. serial_number - The serial number for the certificate. sha1sum - The SHA1 sum for the certificate. signature_algorithm - The algorithm used to sign the certificate. subject_cn - The subject CN for the certificate. subject_dn - The subject DN for the certificate. valid_from - The date at which the certificate is valid from as the number of milliseconds since January 1, 1970, 00:00:00 GMT. Import PingAccess Certificates can be imported using the id, e.g. $ terraform import pingaccess_certificate.demo_certificate 123","title":"pingaccess_certificate"},{"location":"resources/pingaccess_certificate/#example-usage","text":"resource pingaccess_certificate demo_certificate { alias = demo file_data = ${base64encode(file( test_cases/amazon_root_ca1.pem ))} }","title":"Example Usage"},{"location":"resources/pingaccess_certificate/#argument-attributes","text":"The following arguments are supported: alias - (required) The alias for the certificate. file_data - (required) The base64-encoded data of the certificate.","title":"Argument Attributes"},{"location":"resources/pingaccess_certificate/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The certificates's ID. expires - The date at which the certificate expires as the number of milliseconds since January 1, 1970, 00:00:00 GMT. issuer_dn - The issuer DN for the certificate. md5sum - The MD5 sum for the certificate. serial_number - The serial number for the certificate. sha1sum - The SHA1 sum for the certificate. signature_algorithm - The algorithm used to sign the certificate. subject_cn - The subject CN for the certificate. subject_dn - The subject DN for the certificate. valid_from - The date at which the certificate is valid from as the number of milliseconds since January 1, 1970, 00:00:00 GMT.","title":"Attributes Reference"},{"location":"resources/pingaccess_certificate/#import","text":"PingAccess Certificates can be imported using the id, e.g. $ terraform import pingaccess_certificate.demo_certificate 123","title":"Import"},{"location":"resources/pingaccess_identity_mapping/","text":"Provides a identity mapping. Example Usage resource pingaccess_identity_mapping demo_identity_mapping { class_name = com.pingidentity.pa.identitymappings.HeaderIdentityMapping name = demo_identity_mapping configuration = EOF { attributeHeaderMappings : [ { subject : true, attributeName : sub , headerName : sub } ], headerClientCertificateMappings : [] } EOF } Argument Attributes The following arguments are supported: class_name - (Required) The identity mapping's class name. configuration - (Required) The identity mapping's configuration data. name - (Required) The name of the identity mapping. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The identity mapping's ID. Import PingAccess identity mapping can be imported using the id, e.g. $ terraform import pingaccess_identity_mapping.demo_identity_mapping 123","title":"pingaccess_identity_mapping"},{"location":"resources/pingaccess_identity_mapping/#example-usage","text":"resource pingaccess_identity_mapping demo_identity_mapping { class_name = com.pingidentity.pa.identitymappings.HeaderIdentityMapping name = demo_identity_mapping configuration = EOF { attributeHeaderMappings : [ { subject : true, attributeName : sub , headerName : sub } ], headerClientCertificateMappings : [] } EOF }","title":"Example Usage"},{"location":"resources/pingaccess_identity_mapping/#argument-attributes","text":"The following arguments are supported: class_name - (Required) The identity mapping's class name. configuration - (Required) The identity mapping's configuration data. name - (Required) The name of the identity mapping.","title":"Argument Attributes"},{"location":"resources/pingaccess_identity_mapping/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The identity mapping's ID.","title":"Attributes Reference"},{"location":"resources/pingaccess_identity_mapping/#import","text":"PingAccess identity mapping can be imported using the id, e.g. $ terraform import pingaccess_identity_mapping.demo_identity_mapping 123","title":"Import"},{"location":"resources/pingaccess_oauth_server/","text":"Provides an Authorization Server configuration. Example Usage resource pingaccess_oauth_server demo_oauth_server { targets = [ localhost:9031 ] subject_attribute_name = san trusted_certificate_group_id = 1 introspection_endpoint = https://localhost:443/introspection client_credentials { client_id = oauth client_secret { value = top_secret } } secure = true } Argument Attributes The following arguments are supported: audit_level - Enable to record requests to third-party OAuth 2.0 Authorization Server to the audit store. cache_tokens - Enable to retain token details for subsequent requests. client_credentials - Specify the client credentials. description - The description of the third-party OAuth 2.0 Authorization Server. introspection_endpoint - The third-party OAuth 2.0 Authorization Server's token introspection endpoint. secure - Enable if third-party OAuth 2.0 Authorization Server is expecting HTTPS connections. send_audience - Enable to send the URI the user requested as the 'aud' OAuth parameter for PingAccess to the OAuth 2.0 Authorization server. subject_attribute_name - The attribute you want to use from the OAuth access token as the subject for auditing purposes. targets - One or more server hostname:port pairs used to access third-party OAuth 2.0 Authorization Server. token_time_to_live_seconds - Defines the number of seconds to cache the access token. -1 means no limit. This value should be less than the PingFederate Token Lifetime. trusted_certificate_group_id - The group of certificates to use when authenticating to third-party OAuth 2.0 Authorization Server. use_proxy - True if a proxy should be used for HTTP or HTTPS requests. Attributes Reference No additional attributes are provided.","title":"pingaccess_oauth_server"},{"location":"resources/pingaccess_oauth_server/#example-usage","text":"resource pingaccess_oauth_server demo_oauth_server { targets = [ localhost:9031 ] subject_attribute_name = san trusted_certificate_group_id = 1 introspection_endpoint = https://localhost:443/introspection client_credentials { client_id = oauth client_secret { value = top_secret } } secure = true }","title":"Example Usage"},{"location":"resources/pingaccess_oauth_server/#argument-attributes","text":"The following arguments are supported: audit_level - Enable to record requests to third-party OAuth 2.0 Authorization Server to the audit store. cache_tokens - Enable to retain token details for subsequent requests. client_credentials - Specify the client credentials. description - The description of the third-party OAuth 2.0 Authorization Server. introspection_endpoint - The third-party OAuth 2.0 Authorization Server's token introspection endpoint. secure - Enable if third-party OAuth 2.0 Authorization Server is expecting HTTPS connections. send_audience - Enable to send the URI the user requested as the 'aud' OAuth parameter for PingAccess to the OAuth 2.0 Authorization server. subject_attribute_name - The attribute you want to use from the OAuth access token as the subject for auditing purposes. targets - One or more server hostname:port pairs used to access third-party OAuth 2.0 Authorization Server. token_time_to_live_seconds - Defines the number of seconds to cache the access token. -1 means no limit. This value should be less than the PingFederate Token Lifetime. trusted_certificate_group_id - The group of certificates to use when authenticating to third-party OAuth 2.0 Authorization Server. use_proxy - True if a proxy should be used for HTTP or HTTPS requests.","title":"Argument Attributes"},{"location":"resources/pingaccess_oauth_server/#attributes-reference","text":"No additional attributes are provided.","title":"Attributes Reference"},{"location":"resources/pingaccess_rule/","text":"Provides a rule. Example Usage resource pingaccess_rule demo_rule { class_name = com.pingidentity.pa.policy.CIDRPolicyInterceptor name = demo_rule supported_destinations = [ Site , Agent , ] configuration = EOF { cidrNotation : 127.0.0.1/32 , negate : false, overrideIpSource : false, headers : [], headerValueLocation : LAST , fallbackToLastHopIp : true, errorResponseCode : 404, errorResponseStatusMsg : Forbidden , errorResponseTemplateFile : policy.error.page.template.html , errorResponseContentType : text/html;charset=UTF-8 , rejectionHandler : null, rejectionHandlingEnabled : false } EOF } Argument Attributes The following arguments are supported: class_name - (Required) The rule's class name. configuration - (Required) The rule's configuration data. name - (Required) The rule's name. supported_destinations - (Optional) The supported destinations for this rule. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The rule's ID. Import PingAccess rule can be imported using the id, e.g. $ terraform import pingaccess_rule.demo_rule 123","title":"pingaccess_rule"},{"location":"resources/pingaccess_rule/#example-usage","text":"resource pingaccess_rule demo_rule { class_name = com.pingidentity.pa.policy.CIDRPolicyInterceptor name = demo_rule supported_destinations = [ Site , Agent , ] configuration = EOF { cidrNotation : 127.0.0.1/32 , negate : false, overrideIpSource : false, headers : [], headerValueLocation : LAST , fallbackToLastHopIp : true, errorResponseCode : 404, errorResponseStatusMsg : Forbidden , errorResponseTemplateFile : policy.error.page.template.html , errorResponseContentType : text/html;charset=UTF-8 , rejectionHandler : null, rejectionHandlingEnabled : false } EOF }","title":"Example Usage"},{"location":"resources/pingaccess_rule/#argument-attributes","text":"The following arguments are supported: class_name - (Required) The rule's class name. configuration - (Required) The rule's configuration data. name - (Required) The rule's name. supported_destinations - (Optional) The supported destinations for this rule.","title":"Argument Attributes"},{"location":"resources/pingaccess_rule/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The rule's ID.","title":"Attributes Reference"},{"location":"resources/pingaccess_rule/#import","text":"PingAccess rule can be imported using the id, e.g. $ terraform import pingaccess_rule.demo_rule 123","title":"Import"},{"location":"resources/pingaccess_ruleset/","text":"Provides a ruleset. Example Usage resource pingaccess_ruleset demo_ruleset { name = demo_ruleset success_criteria = SuccessIfAllSucceed element_type = Rule policy = [ ${pingaccess_rule.demo_rule.id} , ${pingaccess_rule.second_demo_rule.id} , ] } Argument Attributes The following arguments are supported: element_type - (Required) ['Rule' or 'RuleSet'] name - (Required) The ruleset's name. policy - (Required) The list of policy ids assigned to the ruleset. success_criteria - (Required) ['SuccessIfAllSucceed' or 'SuccessIfAnyOneSucceeds']: The ruleset's success criteria. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The ruleset's ID. Import PingAccess ruleset can be imported using the id, e.g. $ terraform import pingaccess_ruleset.demo_ruleset 123","title":"pingaccess_ruleset"},{"location":"resources/pingaccess_ruleset/#example-usage","text":"resource pingaccess_ruleset demo_ruleset { name = demo_ruleset success_criteria = SuccessIfAllSucceed element_type = Rule policy = [ ${pingaccess_rule.demo_rule.id} , ${pingaccess_rule.second_demo_rule.id} , ] }","title":"Example Usage"},{"location":"resources/pingaccess_ruleset/#argument-attributes","text":"The following arguments are supported: element_type - (Required) ['Rule' or 'RuleSet'] name - (Required) The ruleset's name. policy - (Required) The list of policy ids assigned to the ruleset. success_criteria - (Required) ['SuccessIfAllSucceed' or 'SuccessIfAnyOneSucceeds']: The ruleset's success criteria.","title":"Argument Attributes"},{"location":"resources/pingaccess_ruleset/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The ruleset's ID.","title":"Attributes Reference"},{"location":"resources/pingaccess_ruleset/#import","text":"PingAccess ruleset can be imported using the id, e.g. $ terraform import pingaccess_ruleset.demo_ruleset 123","title":"Import"},{"location":"resources/pingaccess_site/","text":"Provides a site. Example Usage resource pingaccess_site demo_site { name = demo-site targets = [ localhost:1234 ] } Argument Attributes The following arguments are supported: availability_profile_id - (Optional) The ID of the availability profile associated with the site. expected_hostname - (Optional) The name of the host expected in the site's certificate. keep_alive_timeout - (Optional) The time, in milliseconds, that an HTTP persistent connection to the site can be idle before PingAccess closes the connection. load_balancing_strategy_id - (Optional) The ID of the load balancing strategy associated with the site. max_connections - (Optional) The maximum number of HTTP persistent connections you want PingAccess to have open and maintain for the site. -1 indicates unlimited connections. max_web_socket_connections - (Optional) The maximum number of WebSocket connections you want PingAccess to have open and maintain for the site. -1 indicates unlimited connections. name - (Required) The name of the site. secure - (Optional) This field is true if the site expects HTTPS connections. send_pa_cookie - (Optional) This field is true if the PingAccess Token or OAuth Access Token should be included in the request to the site. site_authenticator_ids - (Optional) The IDs of the site authenticators associated with the site. skip_hostname_verification - (Optional) This field is true if the hostname verification of the site's certificate should be skipped. targets - (Required) The {hostname}:{port} pairs for the hosts that make up the site. trusted_certificate_group_id - (Optional) The ID of the trusted certificate group associated with the site. use_proxy - (Optional) True if a proxy should be used for HTTP or HTTPS requests. use_target_host_header - (Optional) Setting this field to true causes PingAccess to adjust the Host header to the site's selected target host rather than the virtual host configured in the application. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The site's ID. Import PingAccess sites can be imported using the id, e.g. $ terraform import pingaccess_site.demo_site 123","title":"pingaccess_site"},{"location":"resources/pingaccess_site/#example-usage","text":"resource pingaccess_site demo_site { name = demo-site targets = [ localhost:1234 ] }","title":"Example Usage"},{"location":"resources/pingaccess_site/#argument-attributes","text":"The following arguments are supported: availability_profile_id - (Optional) The ID of the availability profile associated with the site. expected_hostname - (Optional) The name of the host expected in the site's certificate. keep_alive_timeout - (Optional) The time, in milliseconds, that an HTTP persistent connection to the site can be idle before PingAccess closes the connection. load_balancing_strategy_id - (Optional) The ID of the load balancing strategy associated with the site. max_connections - (Optional) The maximum number of HTTP persistent connections you want PingAccess to have open and maintain for the site. -1 indicates unlimited connections. max_web_socket_connections - (Optional) The maximum number of WebSocket connections you want PingAccess to have open and maintain for the site. -1 indicates unlimited connections. name - (Required) The name of the site. secure - (Optional) This field is true if the site expects HTTPS connections. send_pa_cookie - (Optional) This field is true if the PingAccess Token or OAuth Access Token should be included in the request to the site. site_authenticator_ids - (Optional) The IDs of the site authenticators associated with the site. skip_hostname_verification - (Optional) This field is true if the hostname verification of the site's certificate should be skipped. targets - (Required) The {hostname}:{port} pairs for the hosts that make up the site. trusted_certificate_group_id - (Optional) The ID of the trusted certificate group associated with the site. use_proxy - (Optional) True if a proxy should be used for HTTP or HTTPS requests. use_target_host_header - (Optional) Setting this field to true causes PingAccess to adjust the Host header to the site's selected target host rather than the virtual host configured in the application.","title":"Argument Attributes"},{"location":"resources/pingaccess_site/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The site's ID.","title":"Attributes Reference"},{"location":"resources/pingaccess_site/#import","text":"PingAccess sites can be imported using the id, e.g. $ terraform import pingaccess_site.demo_site 123","title":"Import"},{"location":"resources/pingaccess_site_authenticator/","text":"Provides a site authenticator. Warning This resource will store any credentials in the backend state file, please ensure you use an appropriate backend with the relevent encryption/access controls etc for this. Example Usage resource pingaccess_site_authenticator demo_site_authenticator { name = demo-site-authenticator class_name = com.pingidentity.pa.siteauthenticators.BasicAuthTargetSiteAuthenticator configuration = EOF { username : cheese , password : { value : top_5ecr37 } } EOF hidden_fields = [ password ] } Argument Attributes The following arguments are supported: class_name - (Required) The site authenticator's class name. configuration - (Required) The site authenticator's configuration data. name - (Required) The site authenticator's name. hidden_fields - (Optional) This is a configuration field, to help manage credentials within the resource. As the PingAccess API doesn't return the password used and the encryptedValue field changes on every call we need to store the password field and mask it so we can correctly identify when it has changed (according to the resource not the actual API). Attributes Reference In addition to all arguments above, the following attributes are exported: id - The sites authenticator's ID. Import PingAccess site authenticator can be imported using the id, e.g. $ terraform import pingaccess_site_authenticator.demo_site_authenticator 123","title":"pingaccess_site_authenticator"},{"location":"resources/pingaccess_site_authenticator/#example-usage","text":"resource pingaccess_site_authenticator demo_site_authenticator { name = demo-site-authenticator class_name = com.pingidentity.pa.siteauthenticators.BasicAuthTargetSiteAuthenticator configuration = EOF { username : cheese , password : { value : top_5ecr37 } } EOF hidden_fields = [ password ] }","title":"Example Usage"},{"location":"resources/pingaccess_site_authenticator/#argument-attributes","text":"The following arguments are supported: class_name - (Required) The site authenticator's class name. configuration - (Required) The site authenticator's configuration data. name - (Required) The site authenticator's name. hidden_fields - (Optional) This is a configuration field, to help manage credentials within the resource. As the PingAccess API doesn't return the password used and the encryptedValue field changes on every call we need to store the password field and mask it so we can correctly identify when it has changed (according to the resource not the actual API).","title":"Argument Attributes"},{"location":"resources/pingaccess_site_authenticator/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The sites authenticator's ID.","title":"Attributes Reference"},{"location":"resources/pingaccess_site_authenticator/#import","text":"PingAccess site authenticator can be imported using the id, e.g. $ terraform import pingaccess_site_authenticator.demo_site_authenticator 123","title":"Import"},{"location":"resources/pingaccess_third_party_service/","text":"Provides a third party service. Example Usage resource pingaccess_third_party_service demo_third_party_service { name = demo targets = [ server.domain:1234 , ] } Argument Attributes The following arguments are supported: availability_profile_id - (Optional) The ID of the availability profile associated with the third-party service. expected_hostname - (Optional) The name of the host expected in the third-party service's certificate. host_value - (Optional) The Host header field value in the requests sent to a Third-Party Services. When set, PingAccess will use the hostValue as the Host header field value. Otherwise, the target value will be used. load_balancing_strategy_id - (Optional) The ID of the load balancing strategy associated with the third-party service. max_connections - (Optional) The maximum number of HTTP persistent connections you want PingAccess to have open and maintain for the third-party service. -1 indicates unlimited connections. name - (Required) The name of the third-party service. secure - (Optional) This field is true if the third-party service expects HTTPS connections. skip_hostname_verification - (Optional) This field is true if the hostname verification of the third-party service's certificate should be skipped. targets - (Required) The {hostname}:{port} pairs for the hosts that make up the third-party service. trusted_certificate_group_id - (Optional) The ID of the trusted certificate group associated with the third-party service. use_proxy - (Optional) True if a proxy should be used for HTTP or HTTPS requests. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The third party service's ID. Import PingAccess third party service can be imported using the id, e.g. $ terraform import pingaccess_third_party_service.demo_third_party_service 123","title":"pingaccess_third_party_service"},{"location":"resources/pingaccess_third_party_service/#example-usage","text":"resource pingaccess_third_party_service demo_third_party_service { name = demo targets = [ server.domain:1234 , ] }","title":"Example Usage"},{"location":"resources/pingaccess_third_party_service/#argument-attributes","text":"The following arguments are supported: availability_profile_id - (Optional) The ID of the availability profile associated with the third-party service. expected_hostname - (Optional) The name of the host expected in the third-party service's certificate. host_value - (Optional) The Host header field value in the requests sent to a Third-Party Services. When set, PingAccess will use the hostValue as the Host header field value. Otherwise, the target value will be used. load_balancing_strategy_id - (Optional) The ID of the load balancing strategy associated with the third-party service. max_connections - (Optional) The maximum number of HTTP persistent connections you want PingAccess to have open and maintain for the third-party service. -1 indicates unlimited connections. name - (Required) The name of the third-party service. secure - (Optional) This field is true if the third-party service expects HTTPS connections. skip_hostname_verification - (Optional) This field is true if the hostname verification of the third-party service's certificate should be skipped. targets - (Required) The {hostname}:{port} pairs for the hosts that make up the third-party service. trusted_certificate_group_id - (Optional) The ID of the trusted certificate group associated with the third-party service. use_proxy - (Optional) True if a proxy should be used for HTTP or HTTPS requests.","title":"Argument Attributes"},{"location":"resources/pingaccess_third_party_service/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The third party service's ID.","title":"Attributes Reference"},{"location":"resources/pingaccess_third_party_service/#import","text":"PingAccess third party service can be imported using the id, e.g. $ terraform import pingaccess_third_party_service.demo_third_party_service 123","title":"Import"},{"location":"resources/pingaccess_trusted_certificate_group/","text":"Provides a trusted certificate group. Example Usage resource pingaccess_trusted_certificate_group demo_certificate_group { name = demo_certificate_group use_java_trust_store = true skip_certificate_date_check = false } Argument Attributes The following arguments are supported: cert_ids - The IDs of the certificates that are in the trusted certificate group. ignore_all_certificate_errors - This field is read-only and is only set to true for the Trust Any certificate group. name - The name of trusted certificate group. skip_certificate_date_check - This field is true if certificates that have expired or are not yet valid but have passed the other certificate checks should be trusted. system_group - This field is read-only and indicates the trusted certificate group cannot be modified. use_java_trust_store - This field is true if the certificates in the group should also include all certificates in the Java Trust Store. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The trusted certificate group's ID. Import PingAccess trusted certificate group can be imported using the id, e.g. $ terraform import pingaccess_trusted_certificate_group.demo_trusted_certificate_group 123","title":"pingaccess_trusted_certificate_group"},{"location":"resources/pingaccess_trusted_certificate_group/#example-usage","text":"resource pingaccess_trusted_certificate_group demo_certificate_group { name = demo_certificate_group use_java_trust_store = true skip_certificate_date_check = false }","title":"Example Usage"},{"location":"resources/pingaccess_trusted_certificate_group/#argument-attributes","text":"The following arguments are supported: cert_ids - The IDs of the certificates that are in the trusted certificate group. ignore_all_certificate_errors - This field is read-only and is only set to true for the Trust Any certificate group. name - The name of trusted certificate group. skip_certificate_date_check - This field is true if certificates that have expired or are not yet valid but have passed the other certificate checks should be trusted. system_group - This field is read-only and indicates the trusted certificate group cannot be modified. use_java_trust_store - This field is true if the certificates in the group should also include all certificates in the Java Trust Store.","title":"Argument Attributes"},{"location":"resources/pingaccess_trusted_certificate_group/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The trusted certificate group's ID.","title":"Attributes Reference"},{"location":"resources/pingaccess_trusted_certificate_group/#import","text":"PingAccess trusted certificate group can be imported using the id, e.g. $ terraform import pingaccess_trusted_certificate_group.demo_trusted_certificate_group 123","title":"Import"},{"location":"resources/pingaccess_virtualhost/","text":"Provides a virtualhost. Example Usage resource pingaccess_virtualhost demo_virtualhost { host = localhost port = 1234 } Argument Attributes The following arguments are supported: access_validator_id - Non-zero if the application is protected by an Authorization Server. Only applies to applications of type API. host - (Required) The host name for the Virtual Host. port - (Required) The integer port number for the Virtual Host. agent_resource_cache_ttl - (Optional) Indicates the number of seconds the Agent can cache resources for this application. key_pair_id - (Optional) Key pair assigned to Virtual Host used by SNI, If no key pair is assigned to a virtual host, ENGINE HTTPS Listener key pair will be used. trusted_certificate_group_id - (Optional) Trusted Certificate Group assigned to Virtual Host for client certificate authentication. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The virtualhost's ID. Import PingAccess Virtualhosts can be imported using the id, e.g. $ terraform import pingaccess_virtualhost.demo_virtualhost 123","title":"pingaccess_virtualhost"},{"location":"resources/pingaccess_virtualhost/#example-usage","text":"resource pingaccess_virtualhost demo_virtualhost { host = localhost port = 1234 }","title":"Example Usage"},{"location":"resources/pingaccess_virtualhost/#argument-attributes","text":"The following arguments are supported: access_validator_id - Non-zero if the application is protected by an Authorization Server. Only applies to applications of type API. host - (Required) The host name for the Virtual Host. port - (Required) The integer port number for the Virtual Host. agent_resource_cache_ttl - (Optional) Indicates the number of seconds the Agent can cache resources for this application. key_pair_id - (Optional) Key pair assigned to Virtual Host used by SNI, If no key pair is assigned to a virtual host, ENGINE HTTPS Listener key pair will be used. trusted_certificate_group_id - (Optional) Trusted Certificate Group assigned to Virtual Host for client certificate authentication.","title":"Argument Attributes"},{"location":"resources/pingaccess_virtualhost/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The virtualhost's ID.","title":"Attributes Reference"},{"location":"resources/pingaccess_virtualhost/#import","text":"PingAccess Virtualhosts can be imported using the id, e.g. $ terraform import pingaccess_virtualhost.demo_virtualhost 123","title":"Import"},{"location":"resources/pingaccess_websession/","text":"Provides a web session. Example Usage resource pingaccess_websession demo_session { name = demo-session audience = example client_credentials { client_id = websession client_secret { value = changeme } } scopes = [ profile , address , email , phone , ] } Argument Attributes The following arguments are supported: audience - Enter a unique identifier between 1 and 32 characters that defines who the PA Token is applicable to. cache_user_attributes - Specify if PingAccess should cache user attribute information for use in policy decisions. When disabled, this data is encoded and stored in the session cookie. client_credentials - Specify the client credentials. cookie_domain - The domain where the cookie is stored--for example, corp.yourcompany.com. cookie_type - ['Encrypted' or 'Signed']: Specify an Encrypted JWT or a Signed JWT web session cookie. enable_refresh_user - Specify if you want to have PingAccess periodically refresh user data from PingFederate for use in policy decisions. http_only_cookie - Enable the HttpOnly flag on cookies that contain the PA Token. idle_timeout_in_minutes - The length of time you want the PingAccess Token to remain active when no activity is detected. name - The name of the web session. oidc_login_type - ['Code' or 'POST' or 'x_post']: The web session token type. pfsession_state_cache_in_seconds - Specify the number of seconds to cache PingFederate Session State information. refresh_user_info_claims_interval - Specify the maximum number of seconds to cache user attribute information when the Refresh User is enabled. request_preservation_type - ['None' or 'POST' or 'All']: Specify the types of request data to be preserved if the user is redirected to an authentication page when submitting information to a protected resource. request_profile - Specifies whether the default scopes ('profile', 'email', 'address', and 'phone') should be specified in the access request. (DEPRECATED - to be removed in a future release; please use 'scopes' instead) scopes - The list of scopes to be specified in the access request. If not specified, the default scopes ('profile', 'email', 'address', and 'phone') will be used. secure_cookie - Specify whether the PingAccess Cookie must be sent using only HTTPS connections. send_requested_url_to_provider - Specify if you want to send the requested URL as part of the authentication request to the OpenID Connect Provider. session_timeout_in_minutes - The length of time you want the PA Token to remain active. Once the PA Token expires, an authenticated user must re-authenticate. validate_session_is_alive - Specify if PingAccess should validate sessions with the configured PingFederate instance during request processing. web_storage_type - ['SessionStorage' or 'LocalStorage']: Specify the type of web storage to use for request preservation data. Default is SessionStorage. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The web session's ID. Import PingAccess web session can be imported using the id, e.g. $ terraform import pingaccess_websession.demo_websession 123","title":"pingaccess_websession"},{"location":"resources/pingaccess_websession/#example-usage","text":"resource pingaccess_websession demo_session { name = demo-session audience = example client_credentials { client_id = websession client_secret { value = changeme } } scopes = [ profile , address , email , phone , ] }","title":"Example Usage"},{"location":"resources/pingaccess_websession/#argument-attributes","text":"The following arguments are supported: audience - Enter a unique identifier between 1 and 32 characters that defines who the PA Token is applicable to. cache_user_attributes - Specify if PingAccess should cache user attribute information for use in policy decisions. When disabled, this data is encoded and stored in the session cookie. client_credentials - Specify the client credentials. cookie_domain - The domain where the cookie is stored--for example, corp.yourcompany.com. cookie_type - ['Encrypted' or 'Signed']: Specify an Encrypted JWT or a Signed JWT web session cookie. enable_refresh_user - Specify if you want to have PingAccess periodically refresh user data from PingFederate for use in policy decisions. http_only_cookie - Enable the HttpOnly flag on cookies that contain the PA Token. idle_timeout_in_minutes - The length of time you want the PingAccess Token to remain active when no activity is detected. name - The name of the web session. oidc_login_type - ['Code' or 'POST' or 'x_post']: The web session token type. pfsession_state_cache_in_seconds - Specify the number of seconds to cache PingFederate Session State information. refresh_user_info_claims_interval - Specify the maximum number of seconds to cache user attribute information when the Refresh User is enabled. request_preservation_type - ['None' or 'POST' or 'All']: Specify the types of request data to be preserved if the user is redirected to an authentication page when submitting information to a protected resource. request_profile - Specifies whether the default scopes ('profile', 'email', 'address', and 'phone') should be specified in the access request. (DEPRECATED - to be removed in a future release; please use 'scopes' instead) scopes - The list of scopes to be specified in the access request. If not specified, the default scopes ('profile', 'email', 'address', and 'phone') will be used. secure_cookie - Specify whether the PingAccess Cookie must be sent using only HTTPS connections. send_requested_url_to_provider - Specify if you want to send the requested URL as part of the authentication request to the OpenID Connect Provider. session_timeout_in_minutes - The length of time you want the PA Token to remain active. Once the PA Token expires, an authenticated user must re-authenticate. validate_session_is_alive - Specify if PingAccess should validate sessions with the configured PingFederate instance during request processing. web_storage_type - ['SessionStorage' or 'LocalStorage']: Specify the type of web storage to use for request preservation data. Default is SessionStorage.","title":"Argument Attributes"},{"location":"resources/pingaccess_websession/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The web session's ID.","title":"Attributes Reference"},{"location":"resources/pingaccess_websession/#import","text":"PingAccess web session can be imported using the id, e.g. $ terraform import pingaccess_websession.demo_websession 123","title":"Import"}]}